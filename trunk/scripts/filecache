#!/usr/bin/ruby -w

require 'optparse'
require 'ostruct'
require 'cachedfiles'


cfl = nil

opts = OptionParser.new do |opts|
  opts.banner = "Usage: #{$0} [options]"

  opts.separator ""
  opts.separator "Available options:"


  opts.on("-s", "--snapshot [CONDITION]", "take snapshot of /proc/filecache with pages satisfy the CONDITION.") do |condition|
    cfl = CachedFileList.new
    cfl.snapshot do |idx, len, state, refcnt|
      if condition == nil or condition.empty?
        true
      else
        eval condition 
      end
    end
  end

  opts.on("-r", "--restore SRC", "restore the pre-saved snapshot from SRC file/dir.") do |src|
    cfl = CachedFileList.restore src
  end

  opts.on("-d", "--dump DST", "dump the snapshot to the DST dir.") do |dst|
    Dir.mkdir(dst) if !FileTest.exist?(dst)
    cfl.dump dst
  end

  opts.on("-D", "--dump-file-list DST", "dump the file list of snapshot to the DST dir.") do |dst|
    Dir.mkdir(dst) if !FileTest.exist?(dst)
    cfl.dump_file_list dst
  end

  opts.on("-u", "--union SRC", "the set union.") do |src|
    cfl.union CachedFileList.restore(src) 
  end

  opts.on("-i", "--intersection SRC", "the set intersect between pre-snapshort and SRC.") do |src|
    cfl.intersection CachedFileList.restore(src) 
  end

  opts.on("-f", "--difference SRC", "the set difference between pre-snapshort and SRC.") do |src|
    cfl.difference CachedFileList.restore(src) 
  end

  opts.on("-F", "--rdifference SRC", "the set difference between pre-snapshort and SRC.") do |src|
    cfl = CachedFileList.restore(src).difference cfl
  end

  opts.on("--prune-path PATTERN", "exclude files matching PATTERN.") do |pattern| 
		p = Regexp.new(pattern)
    cfl.delete_if do |cf|
	    if p =~ cf.file
		    true
	    else
		    false
	    end
    end
  end

  opts.on("--delete-if CONDITION", "delete files satisfying CONDITION.") do |condition| 
    cfl.delete_if do |cf|
      if cf.seq == 0 # protect the block device file
        false
      else
        eval condition 
      end
    end
  end

  opts.on_tail("-h", "--help", "Show this message.") do
    puts opts
  end
end

begin
  opts.parse(ARGV)
# rescue NoMethodError => err 
#   puts "May not specify the option '--restore/--snapshot'."
#   puts
  # puts opts
rescue => err
  puts err.backtrace
  $stderr.puts "#{err}\n"
end

# vim: sw=2 ts=2
